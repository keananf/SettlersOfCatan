syntax = "proto3";

package intergroup.lobby;

import "board/board.proto";
import "resource/resource.proto";

// To join a game, a client must open a TCP connection using
// the IP of the Game Server. Upon connecting, the client
// should send the server a Join message.
message Join {
    string username = 1;

    // Only clients/AIs which wish to connect to catan
    // servers that host multiple games will need to specify
    // the gameId.
    int32 gameId = 2;
}

//The list of players that are in the lobby
message Usernames {
    repeated string username = 1;
}

message GameInfo {
    GameSetup gameInfo = 1;
    resource.Counts resources = 2;
    repeated Settlement settlements = 3;
    repeated Settlement cities = 4;
    repeated Road roads = 5;
    PlayerDevCardInfo cards = 6;
    repeated PlayerInfo players = 7;

    message Settlement {
        board.Point point = 1;
        board.Player owner = 2;
    }

    message Road {
        board.Edge edge = 1;
        board.Player owner = 2;
    }

    message PlayerInfo {
        int32 resources = 1;
        board.Player player = 2;
        int32 unusedCards = 3;
        PlayerDevCardInfo playedCards = 4;
    }

    message PlayerDevCardInfo {
        int32 university = 1;
        int32 library = 2;
        int32 knight = 3;
        int32 yearOfPlenty = 4;
        int32 monopoly = 5;
        int32 roadBuilding = 6;
    }
}


// When the game server is ready to begin the game, it sends a
// GameSetup event to all players
message GameSetup {
    repeated board.Hex hexes = 1;
    repeated board.Harbour harbours = 2;
    repeated PlayerSetting playerSettings = 3;
    // to let a client identify themselves in the playerSettings
    board.Player ownPlayer = 4;

    message PlayerSetting {
        string username = 1;
        board.Player player = 2;
        Colour colour = 3;

        enum Colour { 
            RED = 0; 
            BLUE = 1;
            ORANGE = 2;
            WHITE = 3;
            GREEN = 4;
            BROWN = 5;
        }
    }
}

message GameWon {
	board.Player winner = 1;
	repeated CardReveal hiddenCards = 2;

	message CardReveal {
		board.Player player = 1;
		repeated board.VictoryPoint VPCards = 2;
	}
}

